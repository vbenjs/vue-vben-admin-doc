import{o as n,c as s,a}from"./app.4252265e.js";const t='{"title":"项目配置项","description":"","frontmatter":{},"headers":[{"level":2,"title":"环境变量配置","slug":"环境变量配置"},{"level":3,"title":"配置项说明","slug":"配置项说明"},{"level":3,"title":".env","slug":"env"},{"level":3,"title":".env.development","slug":"env-development"},{"level":3,"title":".env.production","slug":"env-production"},{"level":2,"title":"生产环境动态配置","slug":"生产环境动态配置"},{"level":3,"title":"说明","slug":"说明"},{"level":3,"title":"作用","slug":"作用"},{"level":3,"title":"如何获取全局变量","slug":"如何获取全局变量"},{"level":3,"title":"如何新增(新增一个可动态修改的配置项)","slug":"如何新增-新增一个可动态修改的配置项"},{"level":2,"title":"项目配置","slug":"项目配置"},{"level":3,"title":"配置文件路径","slug":"配置文件路径"},{"level":3,"title":"说明","slug":"说明-1"},{"level":2,"title":"缓存配置","slug":"缓存配置"},{"level":2,"title":"多语言配置","slug":"多语言配置"},{"level":2,"title":"主题色配置","slug":"主题色配置"},{"level":2,"title":"样式配置","slug":"样式配置"},{"level":3,"title":"css 前缀设置","slug":"css-前缀设置"},{"level":3,"title":"前缀使用","slug":"前缀使用"},{"level":2,"title":"颜色配置","slug":"颜色配置"},{"level":2,"title":"组件默认参数配置","slug":"组件默认参数配置"}],"relativePath":"guide/settings.md","lastUpdated":1727509014714}',p={},o=a('<h1 id="项目配置项"><a class="header-anchor" href="#项目配置项" aria-hidden="true">#</a> 项目配置项</h1><p>用于修改项目的配色、布局、缓存、多语言、组件默认配置</p><h2 id="环境变量配置"><a class="header-anchor" href="#环境变量配置" aria-hidden="true">#</a> 环境变量配置</h2><p>项目的环境变量配置位于项目根目录下的 <a href="https://github.com/vbenjs/vue-vben-admin/blob/main/.env" target="_blank" rel="noopener noreferrer">.env</a>、<a href="https://github.com/vbenjs/vue-vben-admin/blob/main/.env.development" target="_blank" rel="noopener noreferrer">.env.development</a>、<a href="https://github.com/vbenjs/vue-vben-admin/blob/main/.env.production" target="_blank" rel="noopener noreferrer">.env.production</a></p><p>具体可以参考 <a href="https://github.com/vitejs/vite#modes-and-environment-variables" target="_blank" rel="noopener noreferrer">Vite 文档</a></p><div class="language-bash"><pre><code>.env                <span class="token comment"># 在所有的环境中被载入</span>\n.env.local          <span class="token comment"># 在所有的环境中被载入，但会被 git 忽略</span>\n.env.<span class="token punctuation">[</span>mode<span class="token punctuation">]</span>         <span class="token comment"># 只在指定的模式中被载入</span>\n.env.<span class="token punctuation">[</span>mode<span class="token punctuation">]</span>.local   <span class="token comment"># 只在指定的模式中被载入，但会被 git 忽略</span>\n\n</code></pre></div><div class="tip custom-block"><p class="custom-block-title">温馨提醒</p><ul><li>只有以 <code>VITE_ </code> 开头的变量会被嵌入到客户端侧的包中，你可以在项目代码中这样访问它们：</li></ul><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_PROT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><ul><li>以 <code>VITE_GLOB_*</code> 开头的的变量，在打包的时候，会被加入<a href="#%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE">_app.config.js</a>配置文件当中.</li></ul></div><h3 id="配置项说明"><a class="header-anchor" href="#配置项说明" aria-hidden="true">#</a> 配置项说明</h3><h3 id="env"><a class="header-anchor" href="#env" aria-hidden="true">#</a> .env</h3><p>所有环境适用</p><div class="language-bash"><pre><code><span class="token comment"># 端口号</span>\n<span class="token assign-left variable">VITE_PORT</span><span class="token operator">=</span><span class="token number">3100</span>\n<span class="token comment"># 网站标题</span>\n<span class="token assign-left variable">VITE_GLOB_APP_TITLE</span><span class="token operator">=</span>vben admin\n<span class="token comment"># 简称，用于配置文件名字 不要出现空格、数字开头等特殊字符</span>\n<span class="token assign-left variable">VITE_GLOB_APP_SHORT_NAME</span><span class="token operator">=</span>vben_admin\n</code></pre></div><h3 id="env-development"><a class="header-anchor" href="#env-development" aria-hidden="true">#</a> .env.development</h3><p>开发环境适用</p><div class="language-bash"><pre><code><span class="token comment"># 是否开启mock数据，关闭时需要自行对接后台接口</span>\n<span class="token assign-left variable">VITE_USE_MOCK</span><span class="token operator">=</span>true\n<span class="token comment"># 资源公共路径,需要以 /开头和结尾</span>\n<span class="token assign-left variable">VITE_PUBLIC_PATH</span><span class="token operator">=</span>/\n<span class="token comment"># 是否删除Console.log</span>\n<span class="token assign-left variable">VITE_DROP_CONSOLE</span><span class="token operator">=</span>false\n<span class="token comment"># 本地开发代理，可以解决跨域及多地址代理</span>\n<span class="token comment"># 如果接口地址匹配到，则会转发到http://localhost:3000，防止本地出现跨域问题</span>\n<span class="token comment"># 可以有多个，注意多个不能换行，否则代理将会失效</span>\n<span class="token assign-left variable">VITE_PROXY</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;/api&quot;</span>,<span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">]</span>,<span class="token punctuation">[</span><span class="token string">&quot;api1&quot;</span>,<span class="token string">&quot;http://localhost:3001&quot;</span><span class="token punctuation">]</span>,<span class="token punctuation">[</span><span class="token string">&quot;/upload&quot;</span>,<span class="token string">&quot;http://localhost:3001/upload&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n\n::: tip\nv3.0.0开始，作者重构了vite.config.ts，新版本不再支持VITE_PROXY环境变量。\n:::\n\n<span class="token comment"># 接口地址</span>\n<span class="token comment"># 如果没有跨域问题，直接在这里配置即可</span>\n<span class="token assign-left variable">VITE_GLOB_API_URL</span><span class="token operator">=</span>/api\n<span class="token comment"># 文件上传接口  可选</span>\n<span class="token assign-left variable">VITE_GLOB_UPLOAD_URL</span><span class="token operator">=</span>/upload\n<span class="token comment"># 接口地址前缀，有些系统所有接口地址都有前缀，可以在这里统一加，方便切换</span>\n<span class="token assign-left variable">VITE_GLOB_API_URL_PREFIX</span><span class="token operator">=</span>\n</code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>这里配置的 <code>VITE_PROXY</code> 以及 <code>VITE_GLOB_API_URL</code>, /api 需要是唯一的，不要和接口有的名字冲突</p><p>如果你的接口是 <code>http://localhost:3000/api</code> 之类的，请考虑将 <code>VITE_GLOB_API_URL=/xxxx</code> 换成别的名字</p></div><h3 id="env-production"><a class="header-anchor" href="#env-production" aria-hidden="true">#</a> .env.production</h3><p>生产环境适用</p><div class="language-bash"><pre><code><span class="token comment"># 是否开启mock</span>\n<span class="token assign-left variable">VITE_USE_MOCK</span><span class="token operator">=</span>true\n<span class="token comment"># 接口地址 可以由nginx做转发或者直接写实际地址</span>\n<span class="token assign-left variable">VITE_GLOB_API_URL</span><span class="token operator">=</span>/api\n<span class="token comment"># 文件上传地址 可以由nginx做转发或者直接写实际地址</span>\n<span class="token assign-left variable">VITE_GLOB_UPLOAD_URL</span><span class="token operator">=</span>/upload\n<span class="token comment"># 接口地址前缀，有些系统所有接口地址都有前缀，可以在这里统一加，方便切换</span>\n<span class="token assign-left variable">VITE_GLOB_API_URL_PREFIX</span><span class="token operator">=</span>\n<span class="token comment"># 是否删除Console.log</span>\n<span class="token assign-left variable">VITE_DROP_CONSOLE</span><span class="token operator">=</span>true\n<span class="token comment"># 资源公共路径,需要以 / 开头和结尾</span>\n<span class="token assign-left variable">VITE_PUBLIC_PATH</span><span class="token operator">=</span>/\n<span class="token comment"># 打包是否输出gz｜br文件</span>\n<span class="token comment"># 可选: gzip | brotli | none</span>\n<span class="token comment"># 也可以有多个, 例如 ‘gzip’|&#39;brotli&#39;,这样会同时生成 .gz和.br文件</span>\nVITE_BUILD_COMPRESS <span class="token operator">=</span> <span class="token string">&#39;gzip&#39;</span>\n<span class="token comment"># 打包是否压缩图片</span>\nVITE_USE_IMAGEMIN <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token comment"># 打包是否开启pwa功能</span>\nVITE_USE_PWA <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token comment"># 是否兼容旧版浏览器。开启后打包时间会慢一倍左右。会多打出旧浏览器兼容包,且会根据浏览器兼容性自动使用相应的版本</span>\nVITE_LEGACY <span class="token operator">=</span> <span class="token boolean">false</span>\n</code></pre></div><h2 id="生产环境动态配置"><a class="header-anchor" href="#生产环境动态配置" aria-hidden="true">#</a> 生产环境动态配置</h2><h3 id="说明"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><p>当执行<code>yarn build</code>构建项目之后，会自动生成 <code>_app.config.js</code> 文件并插入 <code>index.html</code>。</p><p><strong>注意: 开发环境不会生成</strong></p><div class="language-js"><pre><code><span class="token comment">// _app.config.js</span>\n<span class="token comment">// 变量名命名规则  __PRODUCTION__xxx_CONF__   xxx：为.env配置的VITE_GLOB_APP_SHORT_NAME</span>\nwindow<span class="token punctuation">.</span>__PRODUCTION__VUE_VBEN_ADMIN__CONF__ <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">VITE_GLOB_APP_TITLE</span><span class="token operator">:</span> <span class="token string">&#39;vben admin&#39;</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_APP_SHORT_NAME</span><span class="token operator">:</span> <span class="token string">&#39;vue_vben_admin&#39;</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_API_URL</span><span class="token operator">:</span> <span class="token string">&#39;/app&#39;</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_API_URL_PREFIX</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_UPLOAD_URL</span><span class="token operator">:</span> <span class="token string">&#39;/upload&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="作用"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h3><p><code>_app.config.js</code> 用于项目在打包后，需要动态修改配置的需求，如接口地址。不用重新进行打包，可在打包后修改 <code>/dist/_app.config.js</code> 内的变量，刷新即可更新代码内的局部变量。</p><h3 id="如何获取全局变量"><a class="header-anchor" href="#如何获取全局变量" aria-hidden="true">#</a> 如何获取全局变量</h3><p>想要获取 <code>_app.config.js</code> 内的变量，可以使用 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/hooks/setting/index.ts" target="_blank" rel="noopener noreferrer">src/hooks/setting/index.ts</a> 提供的函数来进行获取</p><h3 id="如何新增-新增一个可动态修改的配置项"><a class="header-anchor" href="#如何新增-新增一个可动态修改的配置项" aria-hidden="true">#</a> 如何新增(新增一个可动态修改的配置项)</h3><ol><li><p>首先在 <code>.env</code> 或者对应的开发环境配置文件内，新增需要可动态配置的变量，需要以 <code>VITE_GLOB_</code>开头</p></li><li><p><code>VITE_GLOB_</code> 开头的变量会自动加入环境变量，通过在 <code>types/config.d.ts</code> 内修改 <code>GlobEnvConfig</code> 和 <code>GlobConfig</code> 两个环境变量的值来定义新添加的类型</p></li><li><p><a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/hooks/setting/index.ts" target="_blank" rel="noopener noreferrer">useGlobSetting</a> 函数中添加刚新增的返回值即可</p></li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>\n  <span class="token constant">VITE_GLOB_APP_TITLE</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_API_URL</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_APP_SHORT_NAME</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_API_URL_PREFIX</span><span class="token punctuation">,</span>\n  <span class="token constant">VITE_GLOB_UPLOAD_URL</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">ENV</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> useGlobSetting <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">SettingWrap</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Take global configuration</span>\n  <span class="token keyword">const</span> glob<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>GlobConfig<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token constant">VITE_GLOB_APP_TITLE</span><span class="token punctuation">,</span>\n    apiUrl<span class="token operator">:</span> <span class="token constant">VITE_GLOB_API_URL</span><span class="token punctuation">,</span>\n    shortName<span class="token operator">:</span> <span class="token constant">VITE_GLOB_APP_SHORT_NAME</span><span class="token punctuation">,</span>\n    urlPrefix<span class="token operator">:</span> <span class="token constant">VITE_GLOB_API_URL_PREFIX</span><span class="token punctuation">,</span>\n    uploadUrl<span class="token operator">:</span> <span class="token constant">VITE_GLOB_UPLOAD_URL</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> glob <span class="token keyword">as</span> Readonly<span class="token operator">&lt;</span>GlobConfig<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre></div><h2 id="项目配置"><a class="header-anchor" href="#项目配置" aria-hidden="true">#</a> 项目配置</h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>项目配置文件用于配置项目内展示的内容、布局、文本等效果，存于<code>localStorage</code>中。如果更改了项目配置，需要手动<strong>清空</strong> <code>localStorage</code> 缓存，刷新重新登录后方可生效。</p></div><h3 id="配置文件路径"><a class="header-anchor" href="#配置文件路径" aria-hidden="true">#</a> 配置文件路径</h3><p><a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/projectSetting.ts" target="_blank" rel="noopener noreferrer">src/settings/projectSetting.ts</a></p><h3 id="说明-1"><a class="header-anchor" href="#说明-1" aria-hidden="true">#</a> 说明</h3><div class="language-js"><pre><code><span class="token comment">// ! 改动后需要清空浏览器缓存</span>\n<span class="token keyword">const</span> setting<span class="token operator">:</span> ProjectConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 是否显示SettingButton</span>\n  showSettingButton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 是否显示主题切换按钮</span>\n  showDarkModeToggle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 设置按钮位置 可选项</span>\n  <span class="token comment">// SettingButtonPositionEnum.AUTO: 自动选择</span>\n  <span class="token comment">// SettingButtonPositionEnum.HEADER: 位于头部</span>\n  <span class="token comment">// SettingButtonPositionEnum.FIXED: 固定在右侧</span>\n  settingButtonPosition<span class="token operator">:</span> SettingButtonPositionEnum<span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 权限模式,默认前端角色权限模式</span>\n  <span class="token comment">// ROUTE_MAPPING: 前端模式（菜单由路由生成，默认）</span>\n  <span class="token comment">// ROLE：前端模式（菜单路由分开）</span>\n  permissionMode<span class="token operator">:</span> PermissionModeEnum<span class="token punctuation">.</span><span class="token constant">ROUTE_MAPPING</span><span class="token punctuation">,</span>\n  <span class="token comment">// 权限缓存存放位置。默认存放于localStorage</span>\n  permissionCacheType<span class="token operator">:</span> CacheTypeEnum<span class="token punctuation">.</span><span class="token constant">LOCAL</span><span class="token punctuation">,</span>\n  <span class="token comment">// 会话超时处理方案</span>\n  <span class="token comment">// SessionTimeoutProcessingEnum.ROUTE_JUMP: 路由跳转到登录页</span>\n  <span class="token comment">// SessionTimeoutProcessingEnum.PAGE_COVERAGE: 生成登录弹窗，覆盖当前页面</span>\n  sessionTimeoutProcessing<span class="token operator">:</span> SessionTimeoutProcessingEnum<span class="token punctuation">.</span><span class="token constant">ROUTE_JUMP</span><span class="token punctuation">,</span>\n  <span class="token comment">// 项目主题色</span>\n  themeColor<span class="token operator">:</span> primaryColor<span class="token punctuation">,</span>\n  <span class="token comment">// 网站灰色模式，用于可能悼念的日期开启</span>\n  grayMode<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token comment">// 色弱模式</span>\n  colorWeak<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token comment">// 是否取消菜单,顶部,多标签页显示, 用于可能内嵌在别的系统内</span>\n  fullContent<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token comment">// 主题内容宽度</span>\n  contentMode<span class="token operator">:</span> ContentEnum<span class="token punctuation">.</span><span class="token constant">FULL</span><span class="token punctuation">,</span>\n  <span class="token comment">// 是否显示logo</span>\n  showLogo<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 是否显示底部信息 copyright</span>\n  showFooter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 头部配置</span>\n  headerSetting<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 背景色</span>\n    bgColor<span class="token operator">:</span> <span class="token string">&#39;#ffffff&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 固定头部</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否显示顶部</span>\n    show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 主题</span>\n    theme<span class="token operator">:</span> MenuThemeEnum<span class="token punctuation">.</span><span class="token constant">LIGHT</span><span class="token punctuation">,</span>\n    <span class="token comment">// 开启锁屏功能</span>\n    useLockPage<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 显示全屏按钮</span>\n    showFullScreen<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 显示文档按钮</span>\n    showDoc<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 显示消息中心按钮</span>\n    showNotice<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 显示菜单搜索按钮</span>\n    showSearch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 菜单配置</span>\n  menuSetting<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 背景色</span>\n    bgColor<span class="token operator">:</span> <span class="token string">&#39;#273352&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否固定住菜单</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 菜单折叠</span>\n    collapsed<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 折叠菜单时候是否显示菜单名</span>\n    collapsedShowTitle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否可拖拽</span>\n    canDrag<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否显示</span>\n    show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 菜单宽度</span>\n    menuWidth<span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">,</span>\n    <span class="token comment">// 菜单模式</span>\n    mode<span class="token operator">:</span> MenuModeEnum<span class="token punctuation">.</span><span class="token constant">INLINE</span><span class="token punctuation">,</span>\n    <span class="token comment">// 菜单类型</span>\n    type<span class="token operator">:</span> MenuTypeEnum<span class="token punctuation">.</span><span class="token constant">SIDEBAR</span><span class="token punctuation">,</span>\n    <span class="token comment">// 菜单主题</span>\n    theme<span class="token operator">:</span> MenuThemeEnum<span class="token punctuation">.</span><span class="token constant">DARK</span><span class="token punctuation">,</span>\n    <span class="token comment">// 分割菜单</span>\n    split<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 顶部菜单布局</span>\n    topMenuAlign<span class="token operator">:</span> <span class="token string">&#39;start&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 折叠触发器的位置</span>\n    trigger<span class="token operator">:</span> TriggerEnum<span class="token punctuation">.</span><span class="token constant">HEADER</span><span class="token punctuation">,</span>\n    <span class="token comment">// 手风琴模式，只展示一个菜单</span>\n    accordion<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 在路由切换的时候关闭左侧混合菜单展开菜单</span>\n    closeMixSidebarOnChange<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 左侧混合菜单模块切换触发方式</span>\n    mixSideTrigger<span class="token operator">:</span> MixSidebarTriggerEnum<span class="token punctuation">.</span><span class="token constant">CLICK</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否固定左侧混合菜单</span>\n    mixSideFixed<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 多标签</span>\n  multiTabsSetting<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 刷新后是否保留已经打开的标签页</span>\n    cache<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 开启</span>\n    show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 开启快速操作</span>\n    showQuick<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否可以拖拽</span>\n    canDrag<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否显示刷新按钮</span>\n    showRedo<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否显示折叠按钮</span>\n    showFold<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 动画配置</span>\n  transitionSetting<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">//  是否开启切换动画</span>\n    enable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 动画名</span>\n    basicTransition<span class="token operator">:</span> RouterTransitionEnum<span class="token punctuation">.</span><span class="token constant">FADE_SIDE</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否打开页面切换loading</span>\n    openPageLoading<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 是否打开页面切换顶部进度条</span>\n    openNProgress<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 是否开启KeepAlive缓存  开发时候最好关闭,不然每次都需要清除缓存</span>\n  openKeepAlive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 自动锁屏时间，为0不锁屏。 单位分钟 默认1个小时</span>\n  lockTime<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token comment">// 显示面包屑</span>\n  showBreadCrumb<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 显示面包屑图标</span>\n  showBreadCrumbIcon<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token comment">// 是否使用全局错误捕获</span>\n  useErrorHandle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token comment">// 是否开启回到顶部</span>\n  useOpenBackTop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">//  是否可以嵌入iframe页面</span>\n  canEmbedIFramePage<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 切换界面的时候是否删除未关闭的message及notify</span>\n  closeMessageOnSwitch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 切换界面的时候是否取消已经发送但是未响应的http请求。</span>\n  <span class="token comment">// 如果开启,想对单独接口覆盖。可以在单独接口设置</span>\n  removeAllHttpPending<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="缓存配置"><a class="header-anchor" href="#缓存配置" aria-hidden="true">#</a> 缓存配置</h2><p>用于配置缓存内容加密信息，对缓存到浏览器的信息进行 AES 加密</p><p>在 <a href="https://github.com/vbenjs/vue-vben-admin/blob/main/src/settings/encryptionSetting.ts" target="_blank" rel="noopener noreferrer">/@/settings/encryptionSetting.ts</a> 内可以配置 <code>localStorage</code> 及 <code>sessionStorage</code> 缓存信息</p><p><strong>前提:</strong> 使用项目自带的缓存工具类 <a href="https://github.com/vbenjs/vue-vben-admin/blob/main/src/utils/cache/index.ts" target="_blank" rel="noopener noreferrer">/@/utils/cache</a> 来进行缓存操作</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isDevMode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/utils/env&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 缓存默认过期时间</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">DEFAULT_CACHE_TIME</span> <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 开启缓存加密后，加密密钥。采用aes加密</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> cacheCipher <span class="token operator">=</span> <span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">&#39;_11111000001111@&#39;</span><span class="token punctuation">,</span>\n  iv<span class="token operator">:</span> <span class="token string">&#39;@11111000001111_&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 是否加密缓存，默认生产环境加密</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> enableStorageEncryption <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isDevMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="多语言配置"><a class="header-anchor" href="#多语言配置" aria-hidden="true">#</a> 多语言配置</h2><p>用于配置多语言信息</p><p>在 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/localeSetting.ts" target="_blank" rel="noopener noreferrer">src/settings/localeSetting.ts</a> 内配置</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">LOCALE</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> LocaleType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token constant">ZH_CN</span><span class="token operator">:</span> <span class="token string">&#39;zh_CN&#39;</span><span class="token punctuation">,</span>\n  <span class="token constant">EN_US</span><span class="token operator">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> localeSetting<span class="token operator">:</span> LocaleSetting <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 是否显示语言选择器</span>\n  showPicker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 当前语言</span>\n  locale<span class="token operator">:</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span>\n  <span class="token comment">// 默认语言</span>\n  fallback<span class="token operator">:</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span>\n  <span class="token comment">// 允许的语言</span>\n  availableLocales<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">EN_US</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 语言列表</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> localeList<span class="token operator">:</span> DropMenu<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    text<span class="token operator">:</span> <span class="token string">&#39;简体中文&#39;</span><span class="token punctuation">,</span>\n    event<span class="token operator">:</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    text<span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span>\n    event<span class="token operator">:</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">EN_US</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="主题色配置"><a class="header-anchor" href="#主题色配置" aria-hidden="true">#</a> 主题色配置</h2><p>默认全局主题色配置位于 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/build/config/themeConfig.ts" target="_blank" rel="noopener noreferrer">build/config/glob/themeConfig.ts</a> 内</p><p>只需要修改 primaryColor 为您需要的配色，然后重新执行 <code>yarn serve</code> 即可</p><div class="language-js"><pre><code><span class="token comment">/**\n * less global variable\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> primaryColor <span class="token operator">=</span> <span class="token string">&#39;#0960bd&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="样式配置"><a class="header-anchor" href="#样式配置" aria-hidden="true">#</a> 样式配置</h2><h3 id="css-前缀设置"><a class="header-anchor" href="#css-前缀设置" aria-hidden="true">#</a> css 前缀设置</h3><p>用于修改项目内组件 class 的统一前缀</p><ul><li>在 <a href="https://github.com/vbenjs/vue-vben-admin/blob/main/src/settings/designSetting.ts" target="_blank" rel="noopener noreferrer">src/settings/designSetting.ts</a> 内配置</li></ul><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> prefixCls <span class="token operator">=</span> <span class="token string">&#39;vben&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><ul><li>在 <a href="https://github.com/vbenjs/vue-vben-admin/blob/main/src/design/var/index.less" target="_blank" rel="noopener noreferrer">src/design/var/index.less</a> 配置 css 前缀</li></ul><div class="language-less"><pre><code><span class="token variable">@namespace<span class="token punctuation">:</span></span> vben<span class="token punctuation">;</span>\n</code></pre></div><h3 id="前缀使用"><a class="header-anchor" href="#前缀使用" aria-hidden="true">#</a> 前缀使用</h3><p><strong>在 css 内</strong></p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n  <span class="token comment">/* namespace已经全局注入，不需要额外再引入 */</span>\n  <span class="token atrule"><span class="token rule">@prefix-cls</span><span class="token punctuation">:</span> ~&#39;@</span><span class="token punctuation">{</span>namespace<span class="token punctuation">}</span>-app-logo&#39;<span class="token selector">;\n\n  .@</span><span class="token punctuation">{</span>prefix-cls<span class="token punctuation">}</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><strong>在 vue/ts 内</strong></p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useDesign <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/useDesign&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> prefixCls <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDesign</span><span class="token punctuation">(</span><span class="token string">&#39;app-logo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// prefixCls =&gt; vben-app-logo</span>\n</code></pre></div><h2 id="颜色配置"><a class="header-anchor" href="#颜色配置" aria-hidden="true">#</a> 颜色配置</h2><p>用于预设一些颜色数组</p><p>在 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/designSetting.ts" target="_blank" rel="noopener noreferrer">src/settings/designSetting.ts</a> 内配置</p><div class="language-ts"><pre><code><span class="token comment">//  app主题色预设</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">APP_PRESET_COLOR_LIST</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">&#39;#0960bd&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#0084f4&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#009688&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#536dfe&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#ff5c93&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#ee4f12&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#0096c7&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#9c27b0&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#ff9800&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 顶部背景色预设</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">HEADER_PRESET_BG_COLOR_LIST</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">&#39;#ffffff&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#009688&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#5172DC&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#1E9FFF&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#018ffb&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#409eff&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#4e73df&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#e74c3c&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#24292e&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#394664&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#001529&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#383f45&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 左侧菜单背景色预设</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SIDE_BAR_BG_COLOR_LIST</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">&#39;#001529&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#273352&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#ffffff&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#191b24&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#191a23&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#304156&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#001628&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#28333E&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#344058&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#383f45&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="组件默认参数配置"><a class="header-anchor" href="#组件默认参数配置" aria-hidden="true">#</a> 组件默认参数配置</h2><p>在 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/componentSetting.ts" target="_blank" rel="noopener noreferrer">src/settings/componentSetting.ts</a> 内配置</p><div class="language-ts"><pre><code><span class="token comment">// 用于配置某些组件的常规配置，而无需修改组件</span>\n<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> SorterResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../components/Table&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 表格配置</span>\n  table<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 表格接口请求通用配置，可在组件prop覆盖</span>\n    <span class="token comment">// 支持 xxx.xxx.xxx格式</span>\n    fetchSetting<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 传给后台的当前页字段</span>\n      pageField<span class="token operator">:</span> <span class="token string">&#39;page&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// 传给后台的每页显示多少条的字段</span>\n      sizeField<span class="token operator">:</span> <span class="token string">&#39;pageSize&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// 接口返回表格数据的字段</span>\n      listField<span class="token operator">:</span> <span class="token string">&#39;items&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// 接口返回表格总数的字段</span>\n      totalField<span class="token operator">:</span> <span class="token string">&#39;total&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 可选的分页选项</span>\n    pageSizeOptions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;80&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">//默认每页显示多少条</span>\n    defaultPageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    <span class="token comment">// 默认排序方法</span>\n    <span class="token function-variable function">defaultSortFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>sortInfo<span class="token operator">:</span> SorterResult<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> field<span class="token punctuation">,</span> order <span class="token punctuation">}</span> <span class="token operator">=</span> sortInfo<span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 排序字段</span>\n        field<span class="token punctuation">,</span>\n        <span class="token comment">// 排序方式 asc/desc</span>\n        order<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 自定义过滤方法</span>\n    <span class="token function-variable function">defaultFilterFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Recordable<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 滚动组件配置</span>\n  scrollbar<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 是否使用原生滚动样式</span>\n    <span class="token comment">// 开启后，菜单，弹窗，抽屉会使用原生滚动条组件</span>\n    native<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div>',68);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
