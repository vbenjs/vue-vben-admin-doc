import{o as n,c as s,a}from"./app.4252265e.js";const t='{"title":"权限","description":"","frontmatter":{},"headers":[{"level":2,"title":"前端角色权限","slug":"前端角色权限"},{"level":3,"title":"实现","slug":"实现"},{"level":3,"title":"动态更换角色","slug":"动态更换角色"},{"level":3,"title":"细粒度权限","slug":"细粒度权限"},{"level":2,"title":"后台动态获取","slug":"后台动态获取"},{"level":3,"title":"实现","slug":"实现-1"},{"level":3,"title":"动态更换菜单","slug":"动态更换菜单"},{"level":3,"title":"细粒度权限","slug":"细粒度权限-1"},{"level":3,"title":"如何初始化 code","slug":"如何初始化-code"}],"relativePath":"guide/auth.md","lastUpdated":1727509014713}',p={},o=a('<h1 id="权限"><a class="header-anchor" href="#权限" aria-hidden="true">#</a> 权限</h1><p>项目中集成了三种权限处理方式：</p><ol><li>通过用户角色来过滤菜单(前端方式控制)，菜单和路由分开配置</li><li>通过用户角色来过滤菜单(前端方式控制)，菜单由路由配置自动生成</li><li>通过后台来动态生成路由表(后台方式控制)</li></ol><h2 id="前端角色权限"><a class="header-anchor" href="#前端角色权限" aria-hidden="true">#</a> 前端角色权限</h2><p><strong>实现原理:</strong> 在前端固定写死路由的权限，指定路由有哪些权限可以查看。只初始化通用的路由，需要权限才能访问的路由没有被加入路由表内。在登陆后或者其他方式获取用户角色后，通过角色去遍历路由表，获取该角色可以访问的路由表，生成路由表，再通过 <code>router.addRoutes</code> 添加到路由实例，实现权限的过滤。</p><p><strong>缺点:</strong> 权限相对不自由，如果后台改动角色，前台也需要跟着改动。适合角色较固定的系统</p><h3 id="实现"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h3><ol><li>在<a href="./settings.html#项目配置">项目配置</a>将系统内权限模式改为 <code>ROLE</code> 模式</li></ol><div class="language-ts"><pre><code><span class="token comment">// ! 改动后需要清空浏览器缓存</span>\n<span class="token keyword">const</span> setting<span class="token operator">:</span> ProjectConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 权限模式</span>\n  permissionMode<span class="token operator">:</span> PermissionModeEnum<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="2"><li>在路由表配置路由所需的权限，如果不配置，默认可见(见注释)</li></ol><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> AppRouteModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/router/types&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getParentLayout<span class="token punctuation">,</span> <span class="token constant">LAYOUT</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/router/constant&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RoleEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/enums/roleEnum&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/useI18n&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> permission<span class="token operator">:</span> AppRouteModule <span class="token operator">=</span> <span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&#39;/permission&#39;</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;Permission&#39;</span><span class="token punctuation">,</span>\n  component<span class="token operator">:</span> <span class="token constant">LAYOUT</span><span class="token punctuation">,</span>\n  redirect<span class="token operator">:</span> <span class="token string">&#39;/permission/front/page&#39;</span><span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n    icon<span class="token operator">:</span> <span class="token string">&#39;ion:key-outline&#39;</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;routes.demo.permission.permission&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  children<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;front&#39;</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&#39;PermissionFrontDemo&#39;</span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> <span class="token function">getParentLayout</span><span class="token punctuation">(</span><span class="token string">&#39;PermissionFrontDemo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;routes.demo.permission.front&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          path<span class="token operator">:</span> <span class="token string">&#39;auth-pageA&#39;</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;FrontAuthPageA&#39;</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;/@/views/demo/permission/front/AuthPageA.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;routes.demo.permission.frontTestA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            roles<span class="token operator">:</span> <span class="token punctuation">[</span>RoleEnum<span class="token punctuation">.</span><span class="token constant">SUPER</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          path<span class="token operator">:</span> <span class="token string">&#39;auth-pageB&#39;</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;FrontAuthPageB&#39;</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;/@/views/demo/permission/front/AuthPageB.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;routes.demo.permission.frontTestB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            roles<span class="token operator">:</span> <span class="token punctuation">[</span>RoleEnum<span class="token punctuation">.</span><span class="token constant">TEST</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> permission<span class="token punctuation">;</span>\n</code></pre></div><ol start="3"><li>在路由钩子内动态判断</li></ol><p>详细代码见 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/router/guard/permissionGuard.ts" target="_blank" rel="noopener noreferrer">src/router/guard/permissionGuard.ts</a></p><div class="language-ts"><pre><code><span class="token comment">// 这里只列举了主要代码</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">buildRoutesAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nroutes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>route <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> RouteRecordRaw<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> redirectPath <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span>redirect <span class="token operator">||</span> to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> redirect <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>redirectPath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> nextData <span class="token operator">=</span> to<span class="token punctuation">.</span>path <span class="token operator">===</span> redirect <span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> replace<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> redirect <span class="token punctuation">}</span><span class="token punctuation">;</span>\npermissionStore<span class="token punctuation">.</span><span class="token function">setDynamicAddedRoute</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">next</span><span class="token punctuation">(</span>nextData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p><strong>permissionStore.buildRoutesAction</strong> 用于<strong>过滤动态路由</strong>，详细代码见 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/store/modules/permission.ts" target="_blank" rel="noopener noreferrer">src/store/modules/permission.ts</a></p><div class="language-ts"><pre><code><span class="token comment">// 主要代码</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>permissionMode <span class="token operator">===</span> PermissionModeEnum<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">routeFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>route<span class="token operator">:</span> AppRouteRecordRaw<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> meta <span class="token punctuation">}</span> <span class="token operator">=</span> route<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> roles <span class="token punctuation">}</span> <span class="token operator">=</span> meta <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>roles<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> roleList<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> roles<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  routes <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span>asyncRoutes<span class="token punctuation">,</span> routeFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  routes <span class="token operator">=</span> routes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>routeFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// Convert multi-level routing to level 2 routing</span>\n  routes <span class="token operator">=</span> <span class="token function">flatMultiLevelRoutes</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="动态更换角色"><a class="header-anchor" href="#动态更换角色" aria-hidden="true">#</a> 动态更换角色</h3><p>系统提供 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/hooks/web/usePermission.ts" target="_blank" rel="noopener noreferrer">usePermission</a> 方便角色相关操作</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> usePermission <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/usePermission&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RoleEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/enums/roleEnum&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> changeRole <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 更换为test角色</span>\n    <span class="token comment">// 动态更改角色，传入角色名称，可以是数组</span>\n    <span class="token function">changeRole</span><span class="token punctuation">(</span>RoleEnum<span class="token punctuation">.</span><span class="token constant">TEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="细粒度权限"><a class="header-anchor" href="#细粒度权限" aria-hidden="true">#</a> 细粒度权限</h3><p><strong>函数方式</strong></p><p><a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/hooks/web/usePermission.ts" target="_blank" rel="noopener noreferrer">usePermission</a> 还提供了按钮级别的权限控制。</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasPermission([RoleEnum.TEST, RoleEnum.SUPER])<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    拥有[test,super]角色权限可见\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> usePermission <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/usePermission&#39;</span><span class="token punctuation">;</span>\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> RoleEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/enums/roleEnum&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> hasPermission <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> hasPermission <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><strong>组件方式</strong></p><p>具体查看<a href="./../components/auth.html">权限组件使用</a></p><p><strong>指令方式</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>指令方式不能动态更改权限</p></div><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RoleEnum.SUPER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有super角色权限可见<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="后台动态获取"><a class="header-anchor" href="#后台动态获取" aria-hidden="true">#</a> 后台动态获取</h2><p><strong>实现原理:</strong> 是通过接口动态生成路由表，且遵循一定的数据结构返回。前端根据需要处理该数据为可识别的结构，再通过 <code>router.addRoutes</code> 添加到路由实例，实现权限的动态生成。</p><h3 id="实现-1"><a class="header-anchor" href="#实现-1" aria-hidden="true">#</a> 实现</h3><ol><li>在<a href="./settings.html#项目配置">项目配置</a>将系统内权限模式改为 <code>BACK</code> 模式</li></ol><div class="language-ts"><pre><code><span class="token comment">// ! 改动后需要清空浏览器缓存</span>\n<span class="token keyword">const</span> setting<span class="token operator">:</span> ProjectConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 权限模式</span>\n  permissionMode<span class="token operator">:</span> PermissionModeEnum<span class="token punctuation">.</span><span class="token constant">BACK</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="2"><li>路由拦截，与角色权限模式一致</li></ol><p><strong>permissionStore.buildRoutesAction</strong> 用于<strong>过滤动态路由</strong>，详细代码见 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/store/modules/permission.ts" target="_blank" rel="noopener noreferrer">/@/store/modules/permission.ts</a></p><div class="language-ts"><pre><code><span class="token comment">// 主要代码</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>permissionMode <span class="token operator">===</span> PermissionModeEnum<span class="token punctuation">.</span><span class="token constant">BACK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  createMessage<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    content<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;sys.app.menuLoading&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    duration<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// !Simulate to obtain permission codes from the background,</span>\n  <span class="token comment">// this function may only need to be executed once, and the actual project can be put at the right time by itself</span>\n  <span class="token keyword">let</span> routeList<span class="token operator">:</span> AppRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">changePermissionCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    routeList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getMenuList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> AppRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// Dynamically introduce components</span>\n  routeList <span class="token operator">=</span> <span class="token function">transformObjToRoute</span><span class="token punctuation">(</span>routeList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">//  Background routing to menu structure</span>\n  <span class="token keyword">const</span> backMenuList <span class="token operator">=</span> <span class="token function">transformRouteToMenu</span><span class="token punctuation">(</span>routeList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBackMenuList</span><span class="token punctuation">(</span>backMenuList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  routeList <span class="token operator">=</span> <span class="token function">flatMultiLevelRoutes</span><span class="token punctuation">(</span>routeList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">PAGE_NOT_FOUND_ROUTE</span><span class="token punctuation">,</span> <span class="token operator">...</span>routeList<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><strong>getMenuList 返回值格式</strong></p><p>返回值由多个路由模块组成</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>后端接口返回的数据中必须包含<code>PageEnum.BASE_HOME</code>指定的路由（path定义于<code>src/enums/pageEnum.ts</code>）</p></div><div class="language-ts"><pre><code><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Dashboard&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> <span class="token string">&#39;/dashboard/welcome/index&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;routes.dashboard.welcome&#39;</span><span class="token punctuation">,</span>\n      affix<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      icon<span class="token operator">:</span> <span class="token string">&#39;ant-design:home-outlined&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/permission&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Permission&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> <span class="token string">&#39;LAYOUT&#39;</span><span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/permission/front/page&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n      icon<span class="token operator">:</span> <span class="token string">&#39;carbon:user-role&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;routes.demo.permission.permission&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;back&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;PermissionBackDemo&#39;</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">&#39;routes.demo.permission.back&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;page&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;BackAuthPage&#39;</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> <span class="token string">&#39;/demo/permission/back/index&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n              title<span class="token operator">:</span> <span class="token string">&#39;routes.demo.permission.backPage&#39;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;btn&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;BackAuthBtn&#39;</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> <span class="token string">&#39;/demo/permission/back/Btn&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n              title<span class="token operator">:</span> <span class="token string">&#39;routes.demo.permission.backBtn&#39;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="动态更换菜单"><a class="header-anchor" href="#动态更换菜单" aria-hidden="true">#</a> 动态更换菜单</h3><p>系统提供 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/hooks/web/usePermission.ts" target="_blank" rel="noopener noreferrer">usePermission</a> 方便角色相关操作</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> usePermission <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/usePermission&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RoleEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/enums/roleEnum&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> changeMenu <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 更改菜单的实现需要自行去修改</span>\n    <span class="token function">changeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="细粒度权限-1"><a class="header-anchor" href="#细粒度权限-1" aria-hidden="true">#</a> 细粒度权限</h3><p><strong>函数方式</strong></p><p><a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/hooks/web/usePermission.ts" target="_blank" rel="noopener noreferrer">usePermission</a> 还提供了按钮级别的权限控制。</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasPermission([<span class="token punctuation">&#39;</span>20000<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>2000010<span class="token punctuation">&#39;</span>])<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    拥有[20000,2000010]code可见\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> usePermission <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/usePermission&#39;</span><span class="token punctuation">;</span>\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> RoleEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/enums/roleEnum&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> hasPermission <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> hasPermission <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><strong>组件方式</strong></p><p>具体查看<a href="./../components/auth.html">权限组件使用</a></p><p><strong>指令方式</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>指令方式不能动态更改权限</p></div><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>1000<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有code [&#39;1000&#39;]权限可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="如何初始化-code"><a class="header-anchor" href="#如何初始化-code" aria-hidden="true">#</a> 如何初始化 code</h3><p>通常，如需做按钮级别权限，后台会提供相应的 code，或者类型的判断标识。这些编码只需要在登录后获取一次即可。</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getPermCodeByUserId <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/api/sys/user&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> permissionStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/store/modules/permission&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">changePermissionCode</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 从后台获取当前用户拥有的编码</span>\n  <span class="token keyword">const</span> codeList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPermCodeByUserId</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  permissionStore<span class="token punctuation">.</span><span class="token function">commitPermCodeListState</span><span class="token punctuation">(</span>codeList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',55);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
